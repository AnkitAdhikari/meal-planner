generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  Meal      Meal[]
  role      Role
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  USER
  ADMIN
}

model Food {
  id              Int               @id @default(autoincrement())
  name            String            @unique
  calories        Float?
  protein         Float?
  fat             Float?
  carbohydrates   Float?
  fiber           Float
  sugar           Float
  category        Category?         @relation(fields: [categoryId], references: [id])
  categoryId      Int?
  servingUnitId   Int?
  foodServingUnit FoodServingUnit[]
  meal            Meal?             @relation(fields: [mealId], references: [id])
  mealId          Int?
  MealFood        MealFood[]
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
}

model Category {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  foods     Food[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ServingUnit {
  id              Int               @id @default(autoincrement())
  name            String            @unique
  foodServingUnit FoodServingUnit[]
  MealFood        MealFood[]
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
}

model FoodServingUnit {
  id        Int         @id @default(autoincrement())
  food      Food        @relation(fields: [foodId], references: [id])
  foodId    Int
  serving   ServingUnit @relation(fields: [servingId], references: [id])
  servingId Int
  grams     Float?
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

model Meal {
  id        Int        @id @default(autoincrement())
  dateTime  DateTime
  foods     Food[]
  user      User       @relation(fields: [userId], references: [id])
  userId    Int
  MealFood  MealFood[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model MealFood {
  id          Int         @id @default(autoincrement())
  food        Food        @relation(fields: [foodId], references: [id])
  foodId      Int
  meal        Meal        @relation(fields: [mealId], references: [id])
  mealId      Int
  servingUnit ServingUnit @relation(fields: [servingId], references: [id])
  servingId   Int
  amount      Float
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}
